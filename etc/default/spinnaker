# Spinnaker system defaults

function __get_aws_metadata_value() {
  local AWS_METADATA_URL="http://169.254.169.254/latest/meta-data"
  local path="$1"
  local value=$(curl -L --connect-timeout 2 -s -f $AWS_METADATA_URL/$path)

  if [[ $? -eq 0 ]]; then
    echo "$value"
  else
    echo ""
  fi
}


function __get_google_metadata_value() {
  local GOOGLE_METADATA_URL="http://metadata.google.internal/computeMetadata/v1"
  local path="$1"
  local value=$(curl -L --connect-timeout 2 -s -f -H "Metadata-Flavor: Google" \
                     $GOOGLE_METADATA_URL/$path)

  if [[ $? -eq 0 ]]; then
    echo "$value"
  else
    echo ""
  fi
}


function __determine_default_bucket() {
  if [[ ! -z "${SPINNAKER_GOOGLE_PROJECT_ID}" ]]; then
    # dot and colon are not valid bucket characters
    # however they are valid project id names (e.g. google.com:)
    # so replace those bad chars with '-'
    echo "spinnaker-${SPINNAKER_GOOGLE_PROJECT_ID}" | tr ".:" "--"
  else
    echo ""
  fi
}


## Amazon

# If you plan on using Amazon AWS set this to true
SPINNAKER_AWS_ENABLED=false
# Default region you desire to operate in
SPINNAKER_AWS_DEFAULT_REGION=us-west-2

## Google

# If you plan on using Google Compute Engine set this to true
SPINNAKER_GOOGLE_ENABLED=false
# GCP project you intend to manage
# The default value is the project you are deployed in.
SPINNAKER_GOOGLE_PROJECT_ID=`__get_google_metadata_value "project/project-id"`
# Default region you desire to operate in
SPINNAKER_GOOGLE_DEFAULT_REGION=us-central1
# Default zone you desire to operate in
SPINNAKER_GOOGLE_DEFAULT_ZONE=us-central1-f

## Azure

# If you plan on using Azure set this to true
SPINNAKER_AZURE_ENABLED=false
# Default region you desire to operate in
SPINNAKER_AZURE_DEFAULT_REGION=westus


## Platform-independent

# Default storage bucket when using bucket-based storage for front50
# We dont use a conditional here because we want scripts to be able
# to easily replace the binding value.
SPINNAKER_DEFAULT_STORAGE_BUCKET=`__determine_default_bucket`

SPINNAKER_STACKDRIVER_ENABLED=false
